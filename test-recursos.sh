#!/bin/bash

# Script de prueba para el sistema de recursos avanzado
echo "üöÄ Iniciando pruebas del sistema de recursos..."

# Funci√≥n para mostrar mensajes de estado
show_status() {
    echo "‚úÖ $1"
}

show_error() {
    echo "‚ùå $1"
}

# Verificar archivos principales
echo "üìÅ Verificando archivos del sistema..."

files=(
    "resources.html"
    "demo-recursos.html"
    "js/resources-manager.js"
    "js/icon-manager.js"
    "js/firebase-config.js"
    "js/firebase-manager.js"
)

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        show_status "Archivo encontrado: $file"
    else
        show_error "Archivo faltante: $file"
    fi
done

# Verificar la estructura de directorios
echo -e "\nüìÇ Estructura de directorios:"
echo "‚îú‚îÄ‚îÄ assets/"
echo "‚îú‚îÄ‚îÄ js/"
echo "‚îú‚îÄ‚îÄ posts/"
echo "‚îú‚îÄ‚îÄ resources.html"
echo "‚îú‚îÄ‚îÄ demo-recursos.html"
echo "‚îî‚îÄ‚îÄ ..."

# Verificar tama√±o de archivos
echo -e "\nüìä Tama√±o de archivos principales:"
du -h resources.html js/resources-manager.js js/icon-manager.js 2>/dev/null || echo "Error obteniendo tama√±os"

# Verificar configuraci√≥n Firebase
echo -e "\nüî• Verificando configuraci√≥n Firebase..."
if grep -q "databaseURL" js/firebase-config.js; then
    show_status "Configuraci√≥n Firebase encontrada"
else
    show_error "Configuraci√≥n Firebase no encontrada"
fi

# Verificar dependencias JavaScript
echo -e "\nüì¶ Verificando dependencias..."
if grep -q "firebase-app-compat" resources.html; then
    show_status "Firebase SDK incluido"
else
    show_error "Firebase SDK no encontrado"
fi

if grep -q "font-awesome" resources.html; then
    show_status "Font Awesome incluido"
else
    show_error "Font Awesome no encontrado"
fi

# Verificar funcionalidades principales
echo -e "\nüß™ Verificando funcionalidades..."

# ResourceManager
if grep -q "class ResourceManager" js/resources-manager.js; then
    show_status "Clase ResourceManager encontrada"
else
    show_error "Clase ResourceManager no encontrada"
fi

# IconManager
if grep -q "class IconManager" js/icon-manager.js; then
    show_status "Clase IconManager encontrada"
else
    show_error "Clase IconManager no encontrada"
fi

# Verificar proveedores de iconos
echo -e "\nüé® Verificando proveedores de iconos..."
providers=(
    "iconify"
    "fontawesome"
    "simpleicons"
    "devicons"
)

for provider in "${providers[@]}"; do
    if grep -q "$provider" js/icon-manager.js; then
        show_status "Proveedor $provider configurado"
    else
        show_error "Proveedor $provider no encontrado"
    fi
done

# Verificar funciones cr√≠ticas
echo -e "\n‚öôÔ∏è Verificando funciones cr√≠ticas..."
functions=(
    "renderResource"
    "searchResources"
    "exportResources"
    "importResources"
    "previewIcon"
    "generateIconElement"
)

for func in "${functions[@]}"; do
    if grep -q "$func" js/resources-manager.js; then
        show_status "Funci√≥n $func encontrada"
    else
        show_error "Funci√≥n $func no encontrada"
    fi
done

# Verificar elementos HTML
echo -e "\nüåê Verificando elementos HTML..."
html_elements=(
    "resourceModal"
    "categoryModal"
    "resourceForm"
    "iconSearchResults"
    "resourceCategories"
)

for element in "${html_elements[@]}"; do
    if grep -q "id=\"$element\"" resources.html; then
        show_status "Elemento HTML $element encontrado"
    else
        show_error "Elemento HTML $element no encontrado"
    fi
done

# Verificar estilos CSS
echo -e "\nüé® Verificando estilos CSS..."
css_classes=(
    "resources-container"
    "resource-item"
    "icon-search-results"
    "modal"
    "btn-primary"
)

for class in "${css_classes[@]}"; do
    if grep -q "\.$class" resources.html; then
        show_status "Clase CSS $class encontrada"
    else
        show_error "Clase CSS $class no encontrada"
    fi
done

# Mostrar resumen
echo -e "\nüìã RESUMEN DE FUNCIONALIDADES:"
echo "‚Ä¢ ‚úÖ Gesti√≥n completa de recursos (CRUD)"
echo "‚Ä¢ ‚úÖ Iconos din√°micos desde m√∫ltiples servidores"
echo "‚Ä¢ ‚úÖ B√∫squeda en tiempo real"
echo "‚Ä¢ ‚úÖ Cach√© inteligente de iconos"
echo "‚Ä¢ ‚úÖ Sincronizaci√≥n con Firebase"
echo "‚Ä¢ ‚úÖ Importar/Exportar recursos"
echo "‚Ä¢ ‚úÖ Interfaz responsive"
echo "‚Ä¢ ‚úÖ Notificaciones en tiempo real"
echo "‚Ä¢ ‚úÖ Modo edici√≥n toggleable"
echo "‚Ä¢ ‚úÖ P√°gina de demostraci√≥n"

echo -e "\nüéØ PARA PROBAR EL SISTEMA:"
echo "1. Abre resources.html en tu navegador"
echo "2. Usa el bot√≥n 'Nuevo Recurso' para crear recursos"
echo "3. Busca iconos usando la barra de b√∫squeda"
echo "4. Prueba el modo edici√≥n con el bot√≥n correspondiente"
echo "5. Exporta/importa recursos para backup"

echo -e "\nüöÄ ¬°Sistema de recursos listo para usar!"
echo "üì± Accede a demo-recursos.html para ver todas las funcionalidades"
